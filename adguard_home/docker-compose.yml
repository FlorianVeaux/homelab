services:
  tailscale:
    image: tailscale/tailscale:latest # Image to be used
    container_name: ts-adguard_home # Name for local container management
    hostname: ts-adguard_home # Name used within your Tailscale environment
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_ENABLE_HEALTH_CHECK=true # Enable healthcheck endpoint: "/healthz"
      - TS_LOCAL_ADDR_PORT=127.0.0.1:41234 # The <addr>:<port> for the healthz endpoint
      - TS_EXTRA_ARGS=--advertise-tags=tag:dns-server
    volumes:
      - /nvme/docker/adguard_home/ts/state:/var/lib/tailscale # Tailscale requirement - you may need to change the path
    devices:
      - /dev/net/tun:/dev/net/tun # Network configuration for Tailscale to work
    cap_add:
      - net_admin # Tailscale requirement
    ports:
      - "0.0.0.0:53:53/udp" # Binding port 53/udp to the local network - may be removed if only exposure to your Tailnet is required
      - "0.0.0.0:53:53/tcp" # Binding port 53/tcp to the local network - may be removed if only exposure to your Tailnet is required
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:41234/healthz"] # Check Tailscale has a Tailnet IP and is operational
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 10s # Time to wait before starting health checks
    restart: unless-stopped

  application:
    image: adguard/adguardhome:latest
    network_mode: service:tailscale # Sidecar configuration to route adguardhome through Tailscale
    container_name: adguardhome # Name for local container management
    environment:
      - TZ=Europe/Paris
    volumes:
      - /nvme/docker/adguard_home/work:/opt/adguardhome/work
      - /nvme/docker/adguard_home/conf:/opt/adguardhome/conf
    depends_on:
      tailscale:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "pgrep", "-f", "adguardhome"] # Check if adguardhome process is running
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 30s # Time to wait before starting health checks
    restart: unless-stopped
