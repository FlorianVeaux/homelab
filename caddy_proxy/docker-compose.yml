services:
  tailscale:
    image: tailscale/tailscale:latest # Image to be used
    container_name: ts-caddy_proxy # Name for local container management
    hostname: ts-caddy_proxy # Name used within your Tailscale environment
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY_CADDY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_ENABLE_HEALTH_CHECK=true # Enable healthcheck endpoint: "/healthz"
      - TS_LOCAL_ADDR_PORT=127.0.0.1:41234 # The <addr>:<port> for the healthz endpoint
      - TS_EXTRA_ARGS=--advertise-tags=tag:caddy-proxy
      - TS_ACCEPT_DNS=true
    volumes:
      - /nvme/docker/caddy_proxy/ts/state:/var/lib/tailscale # Tailscale requirement - you may need to change the path
    devices:
      - /dev/net/tun:/dev/net/tun # Network configuration for Tailscale to work
    cap_add:
      - net_admin # Tailscale requirement
      - sys_module
    dns:
      - 100.100.100.100 # Use tailscale DNS
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:41234/healthz"] # Check Tailscale has a Tailnet IP and is operational
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 10s # Time to wait before starting health checks
    restart: unless-stopped
  caddy:
    image: caddy:2-alpine
    container_name: caddy-proxy
    depends_on:
      - tailscale
    # share the network with application/tailscale for internal HTTP
    network_mode: service:tailscale
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      # persistent data, optional:
      - /nvme/docker/caddy_proxy/data:/data
      - /nvme/docker/caddy_proxy/config:/config
    environment:
      - TZ=Europe/Paris
      - TAILNET_DNS=porgy-neon.ts.net
      - HOMELAB_DOMAIN=ts.kilimandjaro.homelab
    restart: unless-stopped
